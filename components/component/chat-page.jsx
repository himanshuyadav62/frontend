/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/2nUWBNiMcE2
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import Link from "next/link"
import { Button } from "@/components/ui/button"
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"

export function chatPage() {
  const [selectedContact, setSelectedContact] = useState(null)
  const handleContactClick = (contact) => {
    setSelectedContact(contact)
  }
  const API_ENDPOINTS = {
    getContacts: "/api/contacts",
    addContact: "/api/contacts",
    sendMessage: "/api/messages",
  }
  return (
    (<div className="flex flex-col min-h-dvh">
      <header
        className="bg-primary text-primary-foreground px-4 lg:px-6 h-14 flex items-center justify-between">
        <Link href="#" className="flex items-center justify-center" prefetch={false}>
          <WebcamIcon className="size-6" />
          <span className="text-xl font-bold">Chatter</span>
        </Link>
        <nav className="ml-auto flex gap-4 sm:gap-6">
          <Link
            href="#"
            className="text-sm font-medium hover:underline underline-offset-4"
            prefetch={false}>
            Contacts
          </Link>
          <Link
            href="#"
            className="text-sm font-medium hover:underline underline-offset-4"
            prefetch={false}>
            Settings
          </Link>
          <Link
            href="#"
            className="text-sm font-medium hover:underline underline-offset-4"
            prefetch={false}>
            Help
          </Link>
        </nav>
      </header>
      <div className="grid grid-cols-[300px_1fr] h-full w-full bg-background">
        <div className="border-r bg-muted/20 p-4">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-lg font-medium">Contacts</h2>
            <Button variant="ghost" size="icon" className="rounded-full">
              <PlusIcon className="h-4 w-4" />
              <span className="sr-only">Add Contact</span>
            </Button>
          </div>
          <div className="space-y-2 overflow-auto">
            <Link
              href="#"
              className="flex items-center gap-3 rounded-md p-2 hover:bg-muted"
              onClick={() =>
                handleContactClick({
                  name: "John Doe",
                  avatar: "/placeholder-user.jpg",
                  message: "Hey, how's it going?",
                  time: "2h",
                })
              }
              prefetch={false}>
              <Avatar className="h-10 w-10 border">
                <AvatarImage src="/placeholder-user.jpg" />
                <AvatarFallback>JD</AvatarFallback>
              </Avatar>
              <div className="flex-1 truncate">
                <div className="font-medium">John Doe</div>
                <div className="text-sm text-muted-foreground">Hey, how's it going?</div>
              </div>
              <div className="text-xs text-muted-foreground">2h</div>
            </Link>
            <Link
              href="#"
              className="flex items-center gap-3 rounded-md p-2 hover:bg-muted"
              onClick={() =>
                handleContactClick({
                  name: "Jane Appleseed",
                  avatar: "/placeholder-user.jpg",
                  message: "Let's discuss the project.",
                  time: "1d",
                })
              }
              prefetch={false}>
              <Avatar className="h-10 w-10 border">
                <AvatarImage src="/placeholder-user.jpg" />
                <AvatarFallback>JA</AvatarFallback>
              </Avatar>
              <div className="flex-1 truncate">
                <div className="font-medium">Jane Appleseed</div>
                <div className="text-sm text-muted-foreground">Let's discuss the project.</div>
              </div>
              <div className="text-xs text-muted-foreground">1d</div>
            </Link>
            <Link
              href="#"
              className="flex items-center gap-3 rounded-md p-2 hover:bg-muted"
              onClick={() =>
                handleContactClick({
                  name: "Sarah Miller",
                  avatar: "/placeholder-user.jpg",
                  message: "Attached the latest design files.",
                  time: "3d",
                })
              }
              prefetch={false}>
              <Avatar className="h-10 w-10 border">
                <AvatarImage src="/placeholder-user.jpg" />
                <AvatarFallback>SM</AvatarFallback>
              </Avatar>
              <div className="flex-1 truncate">
                <div className="font-medium">Sarah Miller</div>
                <div className="text-sm text-muted-foreground">Attached the latest design files.</div>
              </div>
              <div className="text-xs text-muted-foreground">3d</div>
            </Link>
          </div>
          <div className="mt-4 flex items-center gap-2">
            <Input type="email" placeholder="Enter email to add contact" className="flex-1" />
            <Button variant="ghost" size="icon" className="rounded-full">
              <PlusIcon className="h-4 w-4" />
              <span className="sr-only">Add Contact</span>
            </Button>
          </div>
        </div>
        {selectedContact ? (
          <div className="flex flex-col">
            <div className="sticky top-0 border-b bg-muted/40 p-4">
              <div className="flex items-center gap-3">
                <Avatar className="h-10 w-10 border">
                  <AvatarImage src="/placeholder-user.jpg" />
                  <AvatarFallback>{selectedContact.name.charAt(0)}</AvatarFallback>
                </Avatar>
                <div>
                  <div className="font-medium">{selectedContact.name}</div>
                  <div className="text-sm text-muted-foreground">Online</div>
                </div>
                <div className="ml-auto flex items-center gap-2">
                  <Button variant="ghost" size="icon" className="rounded-full">
                    <PhoneIcon className="h-4 w-4" />
                    <span className="sr-only">Call</span>
                  </Button>
                  <Button variant="ghost" size="icon" className="rounded-full">
                    <VideoIcon className="h-4 w-4" />
                    <span className="sr-only">Video Call</span>
                  </Button>
                  <Button variant="ghost" size="icon" className="rounded-full">
                    <MoveHorizontalIcon className="h-4 w-4" />
                    <span className="sr-only">More Options</span>
                  </Button>
                </div>
              </div>
            </div>
            <div className="flex-1 overflow-auto p-4">
              <div className="grid gap-4">
                <div
                  className="flex w-max max-w-[65%] flex-col gap-2 rounded-full px-4 py-2 text-sm bg-muted">
                  <div>{selectedContact.message}</div>
                  <div className="text-xs text-muted-foreground">{selectedContact.time}</div>
                </div>
                <div
                  className="flex w-max max-w-[65%] flex-col gap-2 rounded-full px-4 py-2 text-sm ml-auto bg-primary text-primary-foreground">
                  <div>Pretty good, just working on a new project. How about you?</div>
                  <div className="text-xs text-primary-foreground/80">2h</div>
                </div>
                <div
                  className="flex w-max max-w-[65%] flex-col gap-2 rounded-full px-4 py-2 text-sm bg-muted">
                  <div>Ah, nice! I'd love to hear more about it. Do you have time to chat later?</div>
                  <div className="text-xs text-muted-foreground">1h</div>
                </div>
                <div
                  className="flex w-max max-w-[65%] flex-col gap-2 rounded-full px-4 py-2 text-sm ml-auto bg-primary text-primary-foreground">
                  <div>Definitely, how about 4pm?</div>
                  <div className="text-xs text-primary-foreground/80">1h</div>
                </div>
              </div>
            </div>
            <div className="sticky bottom-0 border-t bg-muted/40 p-4">
              <div className="relative">
                <Textarea
                  placeholder="Type your message..."
                  className="min-h-[48px] w-full rounded-2xl resize-none p-4 pr-16 shadow-sm" />
                <Button type="submit" size="icon" className="absolute top-3 right-3">
                  <SendIcon className="h-4 w-4" />
                  <span className="sr-only">Send</span>
                </Button>
              </div>
            </div>
          </div>
        ) : (
          <div className="flex items-center justify-center h-full">
            <p className="text-muted-foreground">Select a contact to start chatting.</p>
          </div>
        )}
      </div>
    </div>)
  );
}

function MoveHorizontalIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <polyline points="18 8 22 12 18 16" />
      <polyline points="6 8 2 12 6 16" />
      <line x1="2" x2="22" y1="12" y2="12" />
    </svg>)
  );
}


function PhoneIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path
        d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" />
    </svg>)
  );
}


function PlusIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M5 12h14" />
      <path d="M12 5v14" />
    </svg>)
  );
}


function SendIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="m22 2-7 20-4-9-9-4Z" />
      <path d="M22 2 11 13" />
    </svg>)
  );
}


function VideoIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path
        d="m16 13 5.223 3.482a.5.5 0 0 0 .777-.416V7.87a.5.5 0 0 0-.752-.432L16 10.5" />
      <rect x="2" y="6" width="14" height="12" rx="2" />
    </svg>)
  );
}


function WebcamIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <circle cx="12" cy="10" r="8" />
      <circle cx="12" cy="10" r="3" />
      <path d="M7 22h10" />
      <path d="M12 22v-4" />
    </svg>)
  );
}


function XIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M18 6 6 18" />
      <path d="m6 6 12 12" />
    </svg>)
  );
}
